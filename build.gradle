plugins {
    id 'java';
    // NOTE: only needed if you're adding anything javafx (e.g. a new syntax, or a new side panel)
    id 'org.openjfx.javafxplugin' version '0.0.13';
}

// NOTE: only needed if you're adding anything javafx (e.g. a new syntax, or a new side panel)
javafx {
    version = '20';
    modules = ['javafx.controls',
            'javafx.fxml',
            'javafx.graphics',
            'javafx.base'];
}

group = 'com.example';
version = '1.0.0';

def gitCommitSha = { ->
    try {
        def stdout = new ByteArrayOutputStream();
        def result = project.exec {
            commandLine 'git', 'describe', '--long', '--always', '--dirty', '--exclude=*', '--abbrev=8';
            standardOutput = stdout;
        }
        if(result.getExitValue() != 0)
            return "";
        return stdout.toString().trim();
    } catch (Exception e) {
        return "";
    }
}

repositories {
    mavenCentral();
}

dependencies {
    implementation group: 'dk.gtz.graphedit', name: 'core', version: '1.2.0';
    // Used for getting things from the DI class
    implementation group: 'dk.yalibs', name: 'yadi', version: '1.1.0';
}

jar {
    manifest {
        attributes(
                "Implementation-Title": "Description goes here",
                "Implementation-Version": archiveVersion,
                "Implementation-Vendor": "example.com",
                "Implementation-URL": "Git url goes here");
    };
}

java {
    sourceCompatibility = gradle.ext.javaVersion;
    targetCompatibility = gradle.ext.javaVersion;
}
